{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","concat","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","e","target","value","searchYelp","preventDefault","renderSortByOptions","placeholder","onChange","Yelp","search","endpoint","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","Y","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.977b4483.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;\n","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business'\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(\n          business => {return <Business key={business.id} business={business} />}\n          )\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default BusinessList;\n","import React from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count'\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return (\n        <li className={this.getSortByClass(sortByOptionValue)}\n        key={sortByOptionValue}\n        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n          {sortByOption}\n        </li>\n      );\n    });\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({\n      sortBy: sortByOption\n    });\n  }\n\n  handleTermChange(e) {\n    this.setState({\n      term: e.target.value\n    });\n  }\n\n  handleLocationChange(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  handleSearch(e) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n        </div>\n        <div className=\"SearchBar-submit\" onClick={this.handleSearch}>\n          <button>{\"Let's Go\"}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","const apiKey = 'SObWxyi74z-3PVRAVwKkDbqOCCbEHQTPF0uiRVoZoKiaIJQaNDySrQSJxz2hgQyqIe2Bk-exfEqtesrUBjkMNkHYAit73HuLEcIr3mpL6nc44ScXGXk6TEEFcqXQW3Yx';\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    const endpoint = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`;\n    return fetch(endpoint, {\n      headers: {Authorization: `Bearer ${apiKey}`}\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if(jsonResponse.businesses) {\n        return jsonResponse.businesses.map(business => {\n          return {\n            id: business.id,\n            imageSrc: business.image_url,\n            name: business.name,\n            address: business.location.address1,\n            city: business.location.city,\n            state: business.location.state,\n            zipCode: business.location.zip_code,\n            category: business.categories.title,\n            rating: business.rating,\n            reviewCount: business.review_count\n          };\n        });\n      } else {\n        return [];\n      }\n    })\n  }\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Y from './util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy){\n    Y.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}